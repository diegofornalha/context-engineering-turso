#!/usr/bin/env python3
"""
Script de teste para as novas ferramentas do Graphiti-Turso MCP
Demonstra o uso das funcionalidades de gerenciamento granular
"""

import asyncio
import json

# Simula√ß√£o das novas ferramentas para teste local
# Em produ√ß√£o, estas s√£o chamadas via MCP

async def test_new_tools():
    """Testa as novas ferramentas do Graphiti-Turso"""
    
    print("üß™ Testando Novas Ferramentas do Graphiti-Turso\n")
    print("=" * 50)
    
    # Exemplos de uso das novas ferramentas
    examples = [
        {
            "tool": "remove_episode",
            "description": "Remove um epis√≥dio espec√≠fico",
            "params": {"episode_id": "ep_0"},
            "use_case": "Quando voc√™ sabe o ID exato do epis√≥dio a remover"
        },
        {
            "tool": "remove_episodes_by_name",
            "description": "Remove epis√≥dios por padr√£o de nome",
            "params": {"name_pattern": "test"},
            "use_case": "Para limpar todos os epis√≥dios de teste de uma vez"
        },
        {
            "tool": "update_episode",
            "description": "Atualiza epis√≥dio existente",
            "params": {
                "episode_id": "ep_1",
                "name": "Nome Atualizado",
                "content": None,  # N√£o altera
                "metadata": None   # N√£o altera
            },
            "use_case": "Para corrigir informa√ß√µes sem recriar o epis√≥dio"
        },
        {
            "tool": "get_episode",
            "description": "Obt√©m epis√≥dio espec√≠fico",
            "params": {"episode_id": "ep_2"},
            "use_case": "Para recuperar todos os dados de um epis√≥dio"
        }
    ]
    
    for example in examples:
        print(f"\nüìå Ferramenta: {example['tool']}")
        print(f"   Descri√ß√£o: {example['description']}")
        print(f"   Caso de Uso: {example['use_case']}")
        print(f"   Par√¢metros:")
        print(f"   {json.dumps(example['params'], indent=6, ensure_ascii=False)}")
        print("-" * 50)
    
    print("\n‚úÖ Todas as ferramentas est√£o dispon√≠veis no MCP!")
    print("\nüí° Como usar no Claude:")
    print("   1. As ferramentas aparecem automaticamente")
    print("   2. Claude pode chamar diretamente via Tool use")
    print("   3. Respostas s√£o retornadas em formato JSON")
    
    # Demonstra√ß√£o de workflow completo
    print("\nüîÑ Exemplo de Workflow Completo:")
    print("   1. add_episode('Reuni√£o', 'Notas da reuni√£o...')")
    print("   2. list_episodes() -> V√™ o ID do epis√≥dio criado")
    print("   3. update_episode('ep_0', name='Reuni√£o Q4 2025')")
    print("   4. get_episode('ep_0') -> Verifica a atualiza√ß√£o")
    print("   5. remove_episode('ep_0') -> Remove quando n√£o for mais necess√°rio")
    
    print("\nüéØ Benef√≠cios:")
    print("   ‚Ä¢ Gerenciamento granular de mem√≥ria")
    print("   ‚Ä¢ N√£o precisa apagar tudo para remover um item")
    print("   ‚Ä¢ Atualiza√ß√µes parciais sem perder metadata")
    print("   ‚Ä¢ Busca e remo√ß√£o por padr√µes")
    
    print("\n" + "=" * 50)
    print("‚ú® Teste conclu√≠do! Servidor pronto para uso.")

if __name__ == "__main__":
    asyncio.run(test_new_tools())